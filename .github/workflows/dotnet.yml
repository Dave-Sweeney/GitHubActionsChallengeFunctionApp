name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
env:
  AZURE_FUNCTIONAPP_NAME: davidSAzureChallengeGitHubActions  
  AZURE_FUNCTIONAPP_PACKAGE_PATH: '.'    
  DOTNET_VERSION: '3.1'              
  
jobs:
  deploy_staging:
    runs-on: ubuntu-latest
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v2

    - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: 'Resolve Project Dependencies Using Dotnet'
      shell: bash
      run: |
        pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
        dotnet build --configuration Release --output ./output
        popd
    - name: 'Run Azure Functions Action'
      uses: Azure/functions-action@v1
      id: fa
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        package: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output'
        publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_TEST_PROFILE }}
  
  deploy_prod:
    needs: deploy_staging
    runs-on: ubuntu-latest
    
    environment:
      name: PROD
      url: ${{ steps.slot_swap.outputs.url }}
      
    steps:
    - name: Login via Azure CLI
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Swap staging slot into production
      id: slot_swap
      run: |
        az webapp deployment slot swap -g ${{ secrets.AZURE_RG }} -n ${{ env.AZURE_FUNCTIONAPP_NAME }} -s staging url=$(az webapp show -g {{ secrets.AZURE_RG }} -n ${{ env.AZURE_FUNCTIONAPP_NAME }} --query "defaultHostName" -o tsv)
        echo "::set-output name=url::http://$url"
        
    - name: az cli logout
      run: az logout
